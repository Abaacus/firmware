image: addis0n/arm-none-eabi-gcc-plus-python:wfe2022

pipelines:
  pull-requests:
    '**':
      - parallel: #Run the linter - download raw output to see all logs
          - step:
              name: 'Getting output from linter'
              script:
                - echo "You can download the linter's output log by downloading the raw output from the pipeline"
                - cppcheck --version
          - step:
              name: 'Lint common'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I common/Inc common/Src --inline-suppr
          - step:
              name: 'Lint BMU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I bmu/Inc bmu/Src --inline-suppr
          - step:
              name: 'Lint PDU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I pdu/Inc pdu/Src --inline-suppr
          - step:
              name: 'Lint DCU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I dcu/Inc dcu/Src --inline-suppr
          - step:
              name: 'Lint VCU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I vcu/Inc vcu/Src --inline-suppr
          - step:
              name: 'Lint WSB'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I wsb/Inc wsb/Src --inline-suppr

      - step:
          name: 'Build all firmware code'
          script:
            - pip install -r common/requirements.txt
            - make all
          artifacts:
            - Gen/**
            
  branches:
    main:
      - parallel: #Run the linter - download raw output to see all logs
          - step:
              name: 'Getting output from linter'
              script:
                - echo "You can download the linter's output log by downloading the raw output from the pipeline"
                - cppcheck --version
          - step:
              name: 'Lint common'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I common/Inc common/Src --inline-suppr
          - step:
              name: 'Lint BMU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I bmu/Inc bmu/Src --inline-suppr
          - step:
              name: 'Lint PDU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I pdu/Inc pdu/Src --inline-suppr
          - step:
              name: 'Lint DCU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I dcu/Inc dcu/Src --inline-suppr
          - step:
              name: 'Lint VCU'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I vcu/Inc vcu/Src --inline-suppr
          - step:
              name: 'Lint WSB'
              script:
                - cppcheck --addon=./common/Misra/misra.json --enable=all  -I wsb/Inc wsb/Src --inline-suppr

      - step:
          name: 'Build all firmware code'
          script:
            - pip install -r common/requirements.txt
            - make all
          artifacts:
            - Gen/**