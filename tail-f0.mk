##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [2.26.0] date: [Sun May 27 19:38:30 PDT 2018] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = $(BINARY_BASE_NAME)


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# source path
SOURCES_DIR =  \
Drivers \
Application/User/Src/stm32f0xx_hal_msp.c \
Drivers/CMSIS \
Application/User/Src \
Application/User/Src/stm32f0xx_it.c \
Application/MAKEFILE \
Application/User/Src/main.c \
Drivers/STM32F0xx_HAL_Driver \
Application \
Application/User

# firmware library path
PERIFLIB_PATH = 

# Build path
BUILD_DIR = build

# More dirs
MIDDLEWARE_DIR = Middlewares
FREERTOS_DIR = $(MIDDLEWARE_DIR)/Third_Party/FreeRTOS

# common code dir
COMMON_LIB_DIR = common-all
COMMON_F0_LIB_DIR = common-all/f0

######################################
# source
######################################
# C sources
C_SOURCES =  \
Src/main.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c \
Src/system_stm32f0xx.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c \
Src/stm32f0xx_hal_msp.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart_ex.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c \
Src/stm32f0xx_it.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_cortex.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c \
Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c \
Gen/Src/$(BOARD_NAME)_can.c \
Src/gpio.c \
Src/usart.c \
Src/can.c \
Src/freertos.c \
$(addprefix $(COMMON_LIB_DIR)/Src/, $(COMMON_LIB_SRC)) \
$(addprefix $(COMMON_F0_LIB_DIR)/Src/, $(COMMON_F0_LIB_SRC)) \
$(wildcard $(FREERTOS_DIR)/Source/portable/GCC/ARM_CM0/*.c) \
$(wildcard $(FREERTOS_DIR)/Source/*.c) \
$(FREERTOS_DIR)/Source/portable/MemMang/heap_4.c \
$(wildcard $(FREERTOS_DIR)/Source/CMSIS_RTOS/*.c)

# ASM sources
ASM_SOURCES =  \
startup_stm32f072xb.s


######################################
# firmware library
######################################
PERIFLIB_SOURCES = 


#######################################
# binaries
#######################################
BINPATH = /Users/Richard/bin/arm/gcc-arm-none-eabi-7-2017-q4-major/bin
PREFIX = arm-none-eabi-
CC = $(BINPATH)/$(PREFIX)gcc
AS = $(BINPATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(BINPATH)/$(PREFIX)objcopy
AR = $(BINPATH)/$(PREFIX)ar
SZ = $(BINPATH)/$(PREFIX)size
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m0

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F072xB \
-DBOARD_NAME=$(BOARD_NAME) \
-DBOARD_TYPE_$(BOARD_TYPE)=1


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-IInc \
-IDrivers/STM32F0xx_HAL_Driver/Inc \
-IDrivers/STM32F0xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32F0xx/Include \
-IDrivers/CMSIS/Include \
-IGen/Inc \
-Icommon-all/Inc\
-Icommon-all/f0/Inc \
-Icommon-all/f7/Inc \
-I$(FREERTOS_DIR)/Source/include \
-I$(FREERTOS_DIR)/Source/portable/GCC/ARM_CM0 \
-I$(FREERTOS_DIR)/Source/CMSIS_RTOS


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F072RBTx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys
LIBDIR =
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -u _printf_float

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin

######################################
# Autogenerated code depedency files
######################################
SCRIPTS_DIR = $(COMMON_LIB_DIR)/Scripts
CAN_FILES_GEN_SCRIPT = $(SCRIPTS_DIR)/generateCanHeadder.py
DTC_FILES_GEN_SCRIPT = $(SCRIPTS_DIR)/generateDTC.py

GEN_DIR = Gen
GEN_DEPS = $(GEN_DIR)/dtc.d $(GEN_DIR)/canGen.d


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) $(GEN_DEPS)
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR) $(GEN_DEPS)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

######################################
# Created autogenerated files
#######################################
$(GEN_DEPS):
	@mkdir -p $(GEN_DIR)
	$(DTC_FILES_GEN_SCRIPT) $(BOARD_NAME)
	$(CAN_FILES_GEN_SCRIPT) $(BOARD_NAME) F0

#######################################
# clean up
#######################################
clean:
	-rm -fR .dep $(BUILD_DIR) $(GEN_DIR)
  

##
# load
##
load: $(BUILD_DIR)/$(TARGET).bin
	openocd -f interface/stlink-v2-1.cfg -f target/stm32f0x.cfg -c "reset_config srst_only connect_assert_srst" -c init -c "reset halt" -c halt -c "flash write_image erase $(BUILD_DIR)/$(TARGET).bin 0x08000000" -c "verify_image $(BUILD_DIR)/$(TARGET).bin" -c "reset run" -c shutdown
##
#debug
##
connect: $(BUILD_DIR)/$(TARGET).bin
	openocd -f interface/stlink-v2-1.cfg -f target/stm32f0x.cfg -c init -c "reset init" -c halt -c "flash write_image erase $(BUILD_DIR)/$(TARGET).bin 0x08000000" -c "verify_image $(BUILD_DIR)/$(TARGET).bin" &

debug: connect
	arm-none-eabi-gdb --eval-command="target remote localhost:3333" --eval-command="monitor reset halt" --eval-command="monitor arm semihosting enable"  $(BUILD_DIR)/$(TARGET).elf

#######################################
# dependencies
#######################################
-include $(shell mkdir .dep 2>/dev/null) $(wildcard .dep/*)
include $(shell mkdir -p Gen) $(wildcard Gen/*.d)

# *** EOF ***
