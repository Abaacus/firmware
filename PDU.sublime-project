{
	"build_systems":
	[
		{
			"file_regex": "(.+[^:]):(\\d+):(\\d+): (?:fatal )?((?:error|warning): .+)$",
			"name": "NUCLEO_F7",
			"shell_cmd": "make BOARD_TYPE=NUCLEO_F7",
			"working_dir": "${project_path}",
			    // Recognize ANSI colors in the output
    		"target": "ansi_color_build",
   			 "syntax": "Packages/ANSIescape/ANSI.tmLanguage"
		},
		{
			"file_regex": "(.+[^:]):(\\d+):(\\d+): (?:fatal )?((?:error|warning): .+)$",
			"name": "NUCLEO_F7_LOAD -j11",
			"shell_cmd": "make load BOARD_TYPE=NUCLEO_F7",
			"working_dir": "${project_path}",
			    // Recognize ANSI colors in the output
    		"target": "ansi_color_build",
   			 "syntax": "Packages/ANSIescape/ANSI.tmLanguage"
		},		
        {
            "file_regex": "(.+[^:]):(\\d+):(\\d+): (?:fatal )?((?:error|warning): .+)$",
            "name": "F7_LOAD",
            "shell_cmd": "make load BOARD_TYPE=F7",
            "working_dir": "${project_path}",
                // Recognize ANSI colors in the output
            "target": "ansi_color_build",
             "syntax": "Packages/ANSIescape/ANSI.tmLanguage"
        },      
        {
            "file_regex": "(.+[^:]):(\\d+):(\\d+): (?:fatal )?((?:error|warning): .+)$",
            "name": "F7_CONNECT",
            "shell_cmd": "make connect BOARD_TYPE=F7",
            "working_dir": "${project_path}",
                // Recognize ANSI colors in the output
            "target": "ansi_color_build",
             "syntax": "Packages/ANSIescape/ANSI.tmLanguage"
        },
        {
            "file_regex": "(.+[^:]):(\\d+):(\\d+): (?:fatal )?((?:error|warning): .+)$",
            "name": "NUCLEO_F7_CONNECT",
            "shell_cmd": "make connect BOARD_TYPE=NUCLEO_F7",
            "working_dir": "${project_path}",
                // Recognize ANSI colors in the output
            "target": "ansi_color_build",
             "syntax": "Packages/ANSIescape/ANSI.tmLanguage"
        },
		{
			"file_regex": "(.+[^:]):(\\d+):(\\d+): (?:fatal )?((?:error|warning): .+)$",
			"name": "F7",
			"shell_cmd": "make BOARD_TYPE=F7 -j11",
			"working_dir": "${project_path}",
			    // Recognize ANSI colors in the output
    		"target": "ansi_color_build",
   			 "syntax": "Packages/ANSIescape/ANSI.tmLanguage"
		}
	],
	"folders":
	[
		{
			"path": "."
		}
	],
	"settings":
	{
	//      "sublimegdb_workingdir": "/Users/abondarenko/Documents/Formula_Electric/Firmware.nosync/2018_pdu/",
 //         // NOTE: You MUST provide --interpreter=mi for the plugin to work
 // // --eval-command="target remote localhost:3333" --eval-command="monitor reset halt"
 //        "gdb_timeout": 120,
 //        "env": {"DISPLAY": ":100"},
 //         "sublimegdb_commandline": "arm-none-eabi-gdb --interpreter=mi --eval-command=\"target remote localhost:3333\" --eval-command=\"file /Users/abondarenko/Documents/Formula_Electric/Firmware.nosync/2018_pdu/Bin/Debug/PDU.elf\""	
      }
}


    // "settings":
    // {
    //      "sublimegdb_workingdir": "${folder:${project_path:your_executable_name}}",
    //      // NOTE: You MUST provide --interpreter=mi for the plugin to work
    //      "sublimegdb_commandline": "gdb --interpreter=mi ./your_executable_name"
    //
    // }
    // 
    // generalized pattern for using always the current open file with an executable name 
    // as the current file
    // "settings":
    // {
    //      "sublimegdb_workingdir": "${folder:${file}}",
    //      // put your arguments hear
    //      "sublimegdb_arguments": "",
    //      // NOTE: You MUST provide --interpreter=mi for the plugin to work
    //      "sublimegdb_commandline": "gdb --interpreter=mi --args ./${file_base_name}"
    //      
    //
    // }
    //
    // If you want to debug different executables as part of the same project, you can add something
    // like this to your project settings:
    //
    // "settings":
    // {
    //      "sublimegdb_executables":
    //      {
    //          "first_executable_name":
    //          {
    //              "workingdir": "${folder:${project_path:first_executable_name}}",
    //              "commandline": "gdb --interpreter=mi ./first_executable"
    //          },
    //          "second_executable_name":
    //          {
    //              "workingdir": "${folder:${project_path:second_executable_name}}",
    //              "commandline": "gdb --interpreter=mi ./second_executable"
    //          }
    //      }
    // }